/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <6 18 30 39 40 7 8 9 10 11 19 20 21 22 23 31 32 33 34 35 41>;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };
    };

    combos {
        compatible = "zmk,combos";

        WinCopy {
            bindings = <&kp K_COPY>;
            key-positions = <26 27>;
        };

        WinPaste {
            bindings = <&kp K_PASTE>;
            key-positions = <28 27>;
        };

        WinCut {
            bindings = <&kp K_CUT>;
            key-positions = <26 28>;
        };

        MacCopy {
            bindings = <&kp K_COPY>;
            key-positions = <26 27 35>;
        };

        MacCut {
            bindings = <&kp K_CUT>;
            key-positions = <26 28 35>;
        };

        MacPaste {
            bindings = <&kp K_PASTE>;
            key-positions = <27 28 35>;
        };
    };

    macros {
        WIN_DESK_LEFT: WIN_DESK_LEFT {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_GUI &kp LEFT_CONTROL &kp LEFT>;
            label = "WIN_DESK_LEFT";
        };

        WIN_DESK_RIGHT: WIN_DESK_RIGHT {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_GUI &kp LEFT_CONTROL &kp RIGHT_ARROW>;
            label = "WIN_DESK_RIGHT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        alpha {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q             &kp W        &kp F                &kp P              &kp B        &kp J        &kp L               &kp U                 &kp Y             &kp SEMICOLON     &kp BSPC
&kp LCTRL  &hml LEFT_META A  &hml LALT R  &hml LEFT_CONTROL S  &hml LEFT_SHIFT T  &kp G        &kp M        &hmr RIGHT_SHIFT N  &hmr RIGHT_CONTROL E  &hmr RIGHT_ALT I  &hmr RIGHT_GUI O  &kp SQT
&kp LSHFT  &kp Z             &kp X        &kp C                &kp D              &kp V        &kp K        &kp H               &kp COMMA             &kp DOT           &kp FSLH          &trans
                                          &lt 3 LEFT_ALT       &mo 1              &kp SPACE    &lt 5 ENTER  &mo 2               &lt 3 LEFT_GUI
            >;
        };

        nav {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &trans        &trans        &trans        &trans          &trans          &trans   &kp HOME    &kp UP     &kp END      &kp PAGE_UP    &kp DELETE
&kp CAPS    &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL     &kp LEFT_SHIFT  &trans          &trans   &kp DOWN    &kp DOWN   &kp RIGHT    &kp INS        &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4    &trans   &kp K_COPY  &kp K_CUT  &kp K_PASTE  &kp PAGE_DOWN  &trans
                                        &trans        &trans          &kp SPACE       &kp RET  &trans      &trans
            >;
        };

        media {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans          &kp K_MUTE         &trans           &trans         &trans       &trans            &trans  &trans  &trans  &trans  &trans
&trans  &kp K_PREVIOUS  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_FORWARD  &trans       &trans            &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans             &trans           &trans         &trans       &trans            &trans  &trans  &trans  &trans  &trans
                                           &trans           &trans         &kp SPACE    &kp K_PLAY_PAUSE  &trans  &trans
            >;
        };

        num {
            bindings = <
&trans  &kp LEFT_BRACE  &kp N7        &kp N8        &kp N9        &kp RIGHT_BRACE    &trans  &trans           &trans     &trans        &trans         &trans
&trans  &kp SEMICOLON   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp EQUAL          &trans  &kp RIGHT_SHIFT  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_META  &trans
&trans  &kp GRAVE       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH      &trans  &trans           &trans     &trans        &trans         &trans
                                      &kp N0        &trans        &trans             &trans  &trans           &trans
            >;
        };

        sym {
            bindings = <
&trans  &kp TILDE  &kp AMPERSAND  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PERCENT     &trans    &kp DOUBLE_QUOTES  &kp LESS_THAN  &kp GREATER_THAN  &kp SINGLE_QUOTE  &trans
&trans  &trans     &kp COLON      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp QUESTION    &kp HASH  &kp EQUAL          &kp MINUS      &kp PLUS          &kp EXCLAMATION   &trans
&trans  &trans     &kp AMPERSAND  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp AT_SIGN     &trans    &kp SLASH          &kp ASTERISK   &kp BACKSLASH     &kp CARET         &trans
                                  &trans                &trans                 &trans          &trans    &trans             &trans
            >;
        };

        fun {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &trans            &trans           &trans     &trans     &trans  &trans  &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &WIN_DESK_LEFT    &WIN_DESK_RIGHT  &trans     &trans     &trans  &trans  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &trans            &trans           &trans     &trans     &trans  &trans  &trans
                         &trans  &trans  &trans            &mkp LCLK        &mkp RCLK  &mkp MCLK
            >;
        };
    };
};
